name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fetch IPInfo GeoIP Database
        env: 
          IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
        run: |
          rm pkg/geoip/geoip.db
          wget -O pkg/geoip/geoip.db https://ipinfo.io/data/free/country.mmdb?token=110c5adde653dc

      - name: Extract branch name
        run: |
          export TAG_NAME=v0.18.5
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: xgo build
        uses: crazy-max/ghaction-xgo@v2
        with:
          xgo_version: latest
          go_version: 1.21.x
          dest: dist
          pkg: cmd/dashboard
          prefix: dashboard
          targets: linux/amd64,linux/arm64,linux/arm-7,linux/s390x,linux/riscv64,windows/amd64,windows/386,windows/arm64 # linux/386,
          v: true
          x: false
          race: false
          tags: timetzdata
          ldflags: -s -w --extldflags '-static -fpic' -X github.com/naiba/nezha/service/singleton.Version=${{ steps.extract_branch.outputs.tag }}
          buildmode: default

      - name: fix dist
        run: |
          ls -al dist/
          mv dist/dashboard-linux-arm-7 dist/dashboard-linux-arm

      - name: Log in to the GHCR
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up image name
        run: |
          GHRC_IMAGE_NAME=ghcr.io/qing1189/nz
          
          echo "::set-output name=GHRC_IMAGE_NAME::$GHRC_IMAGE_NAME"
          
        id: image-name

      - name: Build dasbboard image And Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm,linux/s390x,linux/riscv64 # linux/386,
          push: true
          tags: |
            ${{ steps.image-name.outputs.GHRC_IMAGE_NAME }}:v0.18.5

      - name: Compress dist files
        run: |
          for file in dist/*; do
            if [ -f "$file" ]; then
              zip -r "$file.zip" "$file"
            fi
          done

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*.zip"
          generateReleaseNotes: true

      - name: Purge jsdelivr cache
        run: |
          curl -s https://purge.jsdelivr.net/gh/${{ github.repository_owner }}/nezha@master/script/install.sh
          curl -s https://purge.jsdelivr.net/gh/${{ github.repository_owner }}/nezha@master/script/nezha-agent.service
          curl -s https://purge.jsdelivr.net/gh/${{ github.repository_owner }}/nezha@master/script/docker-compose.yaml
          curl -s https://purge.jsdelivr.net/gh/${{ github.repository_owner }}/nezha@master/script/config.yaml
          LOWER_USERNAME=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          curl -s https://purge.jsdelivr.net/gh/$LOWER_USERNAME/nezha@master/script/install.sh
          curl -s https://purge.jsdelivr.net/gh/$LOWER_USERNAME/nezha@master/script/nezha-agent.service
          curl -s https://purge.jsdelivr.net/gh/$LOWER_USERNAME/nezha@master/script/docker-compose.yaml
          curl -s https://purge.jsdelivr.net/gh/$LOWER_USERNAME/nezha@master/script/config.yaml

      - name: Trigger sync
        if: ${{ env.SYNCED == 0 }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
            owner: 'naiba',
            repo: 'nezha',
            workflow_id: 'sync-release.yml',
            ref: 'master'
            })
